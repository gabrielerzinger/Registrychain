{
  "_from": "bigchaindb-driver",
  "_id": "bigchaindb-driver@3.2.0",
  "_inBundle": false,
  "_integrity": "sha512-jbOdmE9dPbU+35ih2NsgPCkGB/guhZS39KrGPs3o5CYbXobifPKIlN50V4uBuNTdgL6VmHLhEPhwBWQh7ig7og==",
  "_location": "/bigchaindb-driver",
  "_phantomChildren": {},
  "_requested": {
    "escapedName": "bigchaindb-driver",
    "fetchSpec": "latest",
    "name": "bigchaindb-driver",
    "raw": "bigchaindb-driver",
    "rawSpec": "",
    "registry": true,
    "saveSpec": null,
    "type": "tag"
  },
  "_requiredBy": [
    "#USER",
    "/"
  ],
  "_resolved": "https://registry.npmjs.org/bigchaindb-driver/-/bigchaindb-driver-3.2.0.tgz",
  "_shasum": "10656fab61c72dc41b11eabbeace9f8be719921f",
  "_spec": "bigchaindb-driver",
  "_where": "/home/gabriel/Documents/UNIFEI/Gerencia de Projetos/Registrychain",
  "author": {
    "name": "BigchainDB"
  },
  "ava": {
    "babel": "inherit",
    "failFast": true,
    "failWithoutAssertions": false,
    "files": [
      "test/*.js"
    ],
    "powerAssert": false,
    "require": [
      "babel-register"
    ],
    "source": [
      "!dist/**/*",
      "!node_modules/**/*",
      "**/*.{js,jsx}"
    ],
    "tap": true
  },
  "browser": "./dist/browser/bigchaindb-driver.cjs2.min.js",
  "bugs": {
    "url": "https://github.com/bigchaindb/js-bigchaindb-driver/issues"
  },
  "bundleDependencies": false,
  "dependencies": {
    "browser-resolve": "^1.11.2",
    "bs58": "^4.0.0",
    "buffer": "^5.0.2",
    "clone": "^2.1.0",
    "core-js": "^2.4.1",
    "crypto-conditions": "^2.0.1",
    "decamelize": "^1.2.0",
    "es6-promise": "^4.0.5",
    "fetch-ponyfill": "^4.0.0",
    "isomorphic-fetch": "^2.2.1",
    "js-sha3": "^0.6.1",
    "js-utility-belt": "^1.5.0",
    "json-stable-stringify": "^1.0.1",
    "query-string": "^5.0.0",
    "sprintf-js": "^1.0.3",
    "tweetnacl": "^1.0.0"
  },
  "deprecated": false,
  "description": "Node.js driver for BigchainDB",
  "devDependencies": {
    "ava": "^0.24.0",
    "babel-cli": "^6.22.2",
    "babel-eslint": "^8.0.0",
    "babel-loader": "^7.0.0",
    "babel-plugin-add-module-exports": "^0.2.1",
    "babel-plugin-transform-es2015-modules-commonjs": "^6.23.0",
    "babel-plugin-transform-export-extensions": "^6.22.0",
    "babel-plugin-transform-object-assign": "^6.22.0",
    "babel-plugin-transform-object-rest-spread": "^6.23.0",
    "babel-plugin-transform-runtime": "^6.23.0",
    "babel-preset-es2015-no-commonjs": "0.0.2",
    "babel-preset-latest": "^6.22.0",
    "babel-runtime": "^6.22.0",
    "cross-env": "^5.0.1",
    "eslint": "^4.1.1",
    "eslint-config-ascribe": "^3.0.4",
    "eslint-plugin-import": "^2.2.0",
    "husky": "^0.14.0",
    "lint-staged": "^6.0.0",
    "nyc": "^11.0.2",
    "release-it": "^5.0.0",
    "rimraf": "^2.5.4",
    "sinon": "^4.0.0",
    "webpack": "^3.0.0"
  },
  "homepage": "https://www.bigchaindb.com/",
  "keywords": [
    "bigchaindb",
    "blockchain",
    "dapp",
    "decentralized",
    "driver"
  ],
  "license": "Apache-2.0",
  "lint-staged": {
    "*.js": [
      "eslint"
    ]
  },
  "main": "./dist/node/index.js",
  "name": "bigchaindb-driver",
  "optionalDependencies": {},
  "readme": "# [![js-bigchaindb-driver](media/repo-banner@2x.png)](https://www.bigchaindb.com)\n\n> Official JavaScript driver for [BigchainDB](https://github.com/bigchaindb/bigchaindb) with some naive helpers to get you on your way making transactions in Node.js and the browser.\n\n[![Join the chat at https://gitter.im/bigchaindb/js-bigchaindb-driver](https://badges.gitter.im/bigchaindb/js-bigchaindb-driver.svg)](https://gitter.im/bigchaindb/js-bigchaindb-driver?utm_source=badge&utm_medium=badge&utm_campaign=pr-badge&utm_content=badge)\n[![npm](https://img.shields.io/npm/v/bigchaindb-driver.svg)](https://www.npmjs.com/package/bigchaindb-driver)\n[![codecov](https://codecov.io/gh/bigchaindb/js-bigchaindb-driver/branch/master/graph/badge.svg)](https://codecov.io/gh/bigchaindb/js-bigchaindb-driver)\n[![js ascribe](https://img.shields.io/badge/js-ascribe-39BA91.svg)](https://github.com/ascribe/javascript)\n[![Build Status](https://travis-ci.org/bigchaindb/js-bigchaindb-driver.svg?branch=master)](https://travis-ci.org/bigchaindb/js-bigchaindb-driver)\n[![Greenkeeper badge](https://badges.greenkeeper.io/bigchaindb/js-bigchaindb-driver.svg)](https://greenkeeper.io/)\n\n- Documentation: https://docs.bigchaindb.com/projects/js-driver/en/latest/usage.html\n\n## Compatibility\n\n| BigchainDB Server | BigchainDB JavaScript Driver |\n| ----------------- |------------------------------|\n| `0.10`            | `0.1.x`                      |\n| `1.0.0`        | `0.3.x`                      |\n| `>= 1.3.0`        | `3.x.x`                      |\n\n## Breaking changes\nVersion 3.2 of BigchainDB JavaScript Driver introduces a new way of creating transfer transactions. Check [older versions](https://docs.bigchaindb.com/projects/js-driver/en/latest/readme.html#features)\n\n## Contents\n\n* [Installation and Usage with package managers (npm/yarn)](#installation-and-usage-with-package-managers-npmyarn)\n   * [Example: Create a transaction](#example-create-a-transaction)\n* [Use a pre-built image (browser only)](#use-a-pre-built-image-browser-only)\n* [Documentation](#bigchaindb-documentation)\n* [Authors](#authors)\n* [License](#license)\n\n## Installation and Usage with package managers (npm/yarn)\n\n```bash\nnpm install bigchaindb-driver\n```\n\n### Example: Create a transaction\n\n```js\nconst driver = require('bigchaindb-driver')\n\n// BigchainDB server instance or IPDB (e.g. https://test.ipdb.io/api/v1/)\nconst API_PATH = 'http://localhost:9984/api/v1/'\n\n// Create a new keypair.\nconst alice = new driver.Ed25519Keypair()\n\n// Construct a transaction payload\nconst tx = driver.Transaction.makeCreateTransaction(\n    // Define the asset to store, in this example it is the current temperature\n    // (in Celsius) for the city of Berlin.\n    { city: 'Berlin, DE', temperature: 22, datetime: new Date().toString() },\n\n    // Metadata contains information about the transaction itself\n    // (can be `null` if not needed)\n    { what: 'My first BigchainDB transaction' },\n\n    // A transaction needs an output\n    [ driver.Transaction.makeOutput(\n            driver.Transaction.makeEd25519Condition(alice.publicKey))\n    ],\n    alice.publicKey\n)\n\n// Sign the transaction with private keys\nconst txSigned = driver.Transaction.signTransaction(tx, alice.privateKey)\n\n// Send the transaction off to BigchainDB\nconst conn = new driver.Connection(API_PATH)\n\nconn.postTransaction(txSigned)\n    .then(() => conn.pollStatusAndFetchTransaction(txSigned.id))\n    .then(retrievedTx => console.log('Transaction', retrievedTx.id, 'successfully posted.'))\n```\n\n## Use a pre-built image (browser only)\n\n```html\n<!DOCTYPE html>\n<html lang=\"en\">\n    <head>\n        <meta charset=\"utf-8\">\n        <title>BigchainDB boilerplate</title>\n        <!-- Adjust version to your needs -->\n        <script src=\"https://unpkg.com/bigchaindb-driver@0.3.0/dist/browser/bigchaindb-driver.window.min.js\"></script>\n\n        <script>\n            // BigchainDB server instance or IPDB (e.g. https://test.ipdb.io/api/v1/)\n            const API_PATH = 'http://localhost:9984/api/v1/'\n\n            // Create a new keypair.\n            const alice = new BigchainDB.Ed25519Keypair()\n\n            // Construct a transaction payload\n            const tx = BigchainDB.Transaction.makeCreateTransaction(\n                // Define the asset to store, in this example it is the current temperature\n                // (in Celsius) for the city of Berlin.\n                { city: 'Berlin, DE', temperature: 22, datetime: new Date().toString() },\n\n                // Metadata contains information about the transaction itself\n                // (can be `null` if not needed)\n                { what: 'My first BigchainDB transaction' },\n\n                // A transaction needs an output\n                [ BigchainDB.Transaction.makeOutput(\n                        BigchainDB.Transaction.makeEd25519Condition(alice.publicKey))\n                ],\n                alice.publicKey\n            )\n\n            // Sign the transaction with private keys\n            const txSigned = BigchainDB.Transaction.signTransaction(tx, alice.privateKey)\n\n            // Send the transaction off to BigchainDB\n            let conn = new BigchainDB.Connection(API_PATH)\n\n            conn.postTransaction(txSigned)\n                .then(() => conn.pollStatusAndFetchTransaction(txSigned.id))\n                .then(res => {\n                    const elem = document.getElementById('lastTransaction')\n                    elem.href = API_PATH + 'transactions/' + txSigned.id\n                    elem.innerText = txSigned.id\n                    console.log('Transaction', txSigned.id, 'accepted')\n                })\n            // Check console for the transaction's status\n        </script>\n    </head>\n    <body id=\"home\">\n        <h1>Hello BigchainDB</h1>\n        <p>Your transaction id is: <a id=\"lastTransaction\" target=\"_blank\"><em>processing</em></a></p>\n    </body>\n</html>\n```\n\n## BigchainDB Documentation\n\n- [HTTP API Reference](https://docs.bigchaindb.com/projects/server/en/latest/http-client-server-api.html)\n- [The Transaction Model](https://docs.bigchaindb.com/projects/server/en/latest/data-models/transaction-model.html?highlight=crypto%20conditions)\n- [Inputs and Outputs](https://docs.bigchaindb.com/projects/server/en/latest/data-models/inputs-outputs.html)\n- [Asset Transfer](https://docs.bigchaindb.com/projects/py-driver/en/latest/usage.html#asset-transfer)\n- [All BigchainDB Documentation](https://docs.bigchaindb.com/)\n\n## Speed Optimizations\n\nThis implementation plays \"safe\" by using JS-native (or downgradable) libraries for its crypto-related functions to keep compatibilities with the browser. If you do want some more speed, feel free to explore the following:\n\n* [chloride](https://github.com/dominictarr/chloride), or its underlying [sodium](https://github.com/paixaop/node-sodium) library\n* [node-sha3](https://github.com/phusion/node-sha3) -- **MAKE SURE** to use [steakknife's fork](https://github.com/steakknife/node-sha3) if [the FIPS 202 upgrade](https://github.com/phusion/node-sha3/pull/25) hasn't been merged (otherwise, you'll run into all kinds of hashing problems)\n\n\n## Authors\n\n* inspired by [`js-bigchaindb-quickstart`](https://github.com/sohkai/js-bigchaindb-quickstart) of @sohkhai [thanks]\n* BigchainDB <dev@bigchaindb.com>\n\n## License\n\n```\nCopyright 2017 BigchainDB GmbH\n\nLicensed under the Apache License, Version 2.0 (the \"License\");\nyou may not use this file except in compliance with the License.\nYou may obtain a copy of the License at\n\n   http://www.apache.org/licenses/LICENSE-2.0\n\nUnless required by applicable law or agreed to in writing, software\ndistributed under the License is distributed on an \"AS IS\" BASIS,\nWITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\nSee the License for the specific language governing permissions and\nlimitations under the License.\n```\n",
  "readmeFilename": "README.md",
  "repository": {
    "type": "git",
    "url": "git+https://github.com/bigchaindb/js-bigchaindb-driver.git"
  },
  "scripts": {
    "build": "npm run clean && npm run build:cjs && npm run build:dist",
    "build:bundle": "webpack",
    "build:cjs": "cross-env BABEL_ENV=cjs babel ./src -d dist/node",
    "build:dist": "cross-env NODE_ENV=production webpack -p",
    "clean": "rimraf dist/bundle dist/node",
    "lint": "eslint ./",
    "precommit": "lint-staged",
    "prepublishOnly": "npm run build",
    "release": "./node_modules/release-it/bin/release-it.js --src.tagName='v%s' --github.release --npm.publish --non-interactive",
    "release-major": "./node_modules/release-it/bin/release-it.js major --src.tagName='v%s' --github.release --npm.publish --non-interactive",
    "release-minor": "./node_modules/release-it/bin/release-it.js minor --src.tagName='v%s' --github.release --npm.publish --non-interactive",
    "report-coverage": "nyc report --reporter=lcov > coverage.lcov && codecov",
    "test": "npm run lint && nyc ava test/ && npm run thanks && npm run report-coverage",
    "thanks": "cowsay Hi, thanks for your interest in BigchainDB. We appreciate your contribution!"
  },
  "version": "3.2.0"
}
